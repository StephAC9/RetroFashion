{"remainingRequest":"/Users/macbookpro/Desktop/WebDevCourse/RetroFashion/RetroFashion/FrontEnd/adminboardcontrol/node_modules/babel-loader/lib/index.js!/Users/macbookpro/Desktop/WebDevCourse/RetroFashion/RetroFashion/FrontEnd/adminboardcontrol/node_modules/eslint-loader/index.js??ref--13-0!/Users/macbookpro/Desktop/WebDevCourse/RetroFashion/RetroFashion/FrontEnd/adminboardcontrol/src/store/index.js","dependencies":[{"path":"/Users/macbookpro/Desktop/WebDevCourse/RetroFashion/RetroFashion/FrontEnd/adminboardcontrol/src/store/index.js","mtime":1582828566257},{"path":"/Users/macbookpro/Desktop/WebDevCourse/RetroFashion/RetroFashion/FrontEnd/adminboardcontrol/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/WebDevCourse/RetroFashion/RetroFashion/FrontEnd/adminboardcontrol/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/WebDevCourse/RetroFashion/RetroFashion/FrontEnd/adminboardcontrol/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/macbookpro/Desktop/WebDevCourse/RetroFashion/RetroFashion/FrontEnd/adminboardcontrol/src/store/index.js"],"names":["Vue","Vuex","axios","router","use","Store","state","adminAuth","token","products","members","admins","reviews","orders","getters","actions","login","payload","commit","method","url","data","query","variables","email","password","auth","response","loginAsAdmin","console","log","alert","localStorage","setItem","getItem","setTimeout","push","name","saveProduct","headers","Authorization","productName","productImages","images","productCategories","categories","productDescription","description","productColor","color","productSize","size","productPrice","parseFloat","price","quantity","parseInt","product","savedProduct","addProduct","fetchProducts","productList","allProducts","freezeProduct","productId","id","mutations","SET_TOKEN","ADD_TO_PRODUCT","SET_PRODUCTS","FREEZE_PRODUCT","filter","p"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport router from '../router'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n    state: {\n        adminAuth: false,\n        token: null,\n        products: [],\n        members: [],\n        admins: [],\n        reviews: [],\n        orders: []\n    },\n    getters: {\n        products: state => state.products\n    },\n    actions: {\n        async login({ commit }, payload) {\n            try {\n                const auth = await axios({\n                    method: 'POST',\n                    url: 'http://localhost:4200/graphql',\n                    data: {\n                        query: `mutation loginAsAdmin($email: String!, $password: String!){\n                        loginAsAdmin(email: $email, password: $password){\n                            adminId\n                            token\n                            tokenExpiration\n                        }             \n                    }`,\n                        variables: {\n                            email: payload.email,\n                            password: payload.password\n                        },\n                    },\n\n                })\n                let token = ''\n                const response = auth.data.data.loginAsAdmin\n                console.log(response)\n\n                response === null ? alert('Wrong login details. Try again please!') :\n\n                    token = auth.data.data.loginAsAdmin.token\n                localStorage.setItem('token', token)\n                commit('SET_TOKEN', localStorage.getItem('token'))\n                setTimeout(() => {\n                    router.push({ name: 'Dasboard' })\n                }, 1500);\n\n            } catch (err) {\n                console.log(err)\n            }\n        },\n        async saveProduct({ commit }, payload) {\n            console.log(payload)\n            try {\n                const product = await axios({\n                    method: 'POST',\n                    url: 'http://localhost:4200/graphql',\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    },\n                    data: {\n                        query: `mutation addProduct($productName: String!,$productImages: [String]!,$productCategories: [String]!,$productDescription: String!,$productColor: String!,$productSize: String!,$productPrice: Float!,$quantity: Int!){\n                        addProduct(productName:$productName,productImages:$productImages,productCategories:$productCategories,productDescription:$productDescription,productColor:$productColor,productSize:$productSize,productPrice:$productPrice,quantity:$quantity){\n                            id\n                            productName\n                            productImages\n                            productCategories\n                            productDescription\n                            productColor\n                            productSize\n                            productPrice\n                            productEntryDate\n                        }             \n                    }`,\n                        variables: {\n                            productName: payload.name,\n                            productImages: payload.images,\n                            productCategories: payload.categories,\n                            productDescription: payload.description,\n                            productColor: payload.color,\n                            productSize: payload.size,\n                            productPrice: parseFloat(payload.price),\n                            quantity: parseInt(payload.quantity)\n                        }\n                    },\n                })\n                const savedProduct = product.data.data.addProduct\n                console.log(savedProduct)\n                commit('ADD_TO_PRODUCT', savedProduct)\n            } catch (err) {\n                console.log(err)\n            }\n        },\n        async fetchProducts({ commit }) {\n            try {\n                const products = await axios({\n                    method: 'POST',\n                    url: 'http://localhost:4200/graphql',\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    },\n                    data: {\n                        query: `query allProducts{\n                        allProducts{\n                            id\n                            productName\n                            productImages\n                            productCategories\n                            productDescription\n                            productColor\n                            productSize\n                            productPrice\n                            productEntryDate\n                            stock{\n                                inStock\n                            }\n                            \n                        }             \n                    }`\n                    },\n\n                })\n                const productList = products.data.data.allProducts\n                console.log(productList)\n                commit('SET_PRODUCTS', productList)\n            } catch (err) {\n                console.log(err)\n            }\n        },\n\n        async freezeProduct({ commit }, payload) {\n            console.log(payload)\n            try {\n                const product = await axios({\n                    method: 'POST',\n                    url: 'http://localhost:4200/graphql',\n                    headers: {\n                        Authorization: 'Bearer ' + localStorage.getItem('token')\n                    },\n                    data: {\n                        query: `mutation freezeProduct($productId: ID!){\n                        freezeProduct(productId: $productId){\n                            id\n                            productName\n                        }             \n                    }`,\n                        variables: {\n                            productId: payload.productId,\n                        }\n                    },\n                })\n                const productId = product.data.data.freezeProduct.id\n                console.log(productId)\n                commit('FREEZE_PRODUCT', productId)\n            } catch (err) {\n                console.log(err)\n            }\n        },\n    },\n    mutations: {\n        SET_TOKEN: (state, payload) => state.token = payload,\n        ADD_TO_PRODUCT: (state, payload) => state.products.push(payload),\n        SET_PRODUCTS: (state, payload) => state.products = payload,\n        FREEZE_PRODUCT: (state, payload) => {\n            state.products.filter(p => p.id !== payload)\n        },\n    }\n})"]}]}